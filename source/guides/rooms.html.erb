<p class="type">room IDs</p>

<h1>Introduction</h1>

<h2>
  Room IDs are how your application's users create peer connections with each
  other.
</h2>

<p>
  It's pretty simple: Peers get into the same room if they pass the same
  <code>roomId</code> into the Vega Prime constructor. Take, for example, Bob's
  Vega Prime instance.
</p>

<pre>
<code class="language-javascript">// Bob's Vega Prime instance

new VegaPrime({
  url: 'wss://my-secure-vega-server.com',
  roomId: 'abc123',
  badge: {}
});
</code>
</pre>

<p>
  If Nancy wanted to create a peer connection with Bob, her browser's
  JavaScript must instantiate VegaPrime with a <code>roomId</code> of 'abc123'.
</p>

<h1 id="room-patterns">Patterns</h1>

<h2>
  Next, there are a few patterns that could help you think of how to get peers
  in the same room.
</h2>

<h3 id="party-pattern">It's a party and everyone's invited!</h3>

<p>
  If you want every user to talk to each other, just give everybody the same
  room id. A good example of this is over at the 
  <a href="/try-it.html">demo page</a>.
</p>

<p>Take Bob's Vega Prime instance, for example.</p>

<pre>
<code class="language-javascript">new VegaPrime({
  url: 'wss://my-secure-vega-server.com',
  roomId: 'abc123',
  badge: {}
});
</code>
</pre>

<p>
  That room id of abc123 is hardcoded. If every user hits a page with that
  script, everyone ends up in the room. Pretty simple.
</p>
